import{ax as s,q as a,p as i,aS as n}from"./chunks/framework.DtYAO0R4.js";const e="/stcode-docs-new/assets/image-20250313160318365.C6bvqAL2.png",y=JSON.parse('{"title":"windows","description":"","frontmatter":{},"headers":[],"relativePath":"yunwei/windows.md","filePath":"yunwei/windows.md","lastUpdated":null}'),l={name:"yunwei/windows.md"},p=n('<h1 id="windows" tabindex="-1">windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;windows&quot;">​</a></h1><h2 id="查看端口被哪个服务占用" tabindex="-1">查看端口被哪个服务占用 <a class="header-anchor" href="#查看端口被哪个服务占用" aria-label="Permalink to &quot;查看端口被哪个服务占用&quot;">​</a></h2><h3 id="端口占用查看" tabindex="-1">端口占用查看 <a class="header-anchor" href="#端口占用查看" aria-label="Permalink to &quot;端口占用查看&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> netstat</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -ano</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> findstr</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="根据pid查看哪个服务占的" tabindex="-1">根据PID查看哪个服务占的 <a class="header-anchor" href="#根据pid查看哪个服务占的" aria-label="Permalink to &quot;根据PID查看哪个服务占的&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> tasklist</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> findstr</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5320</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+e+`" alt="image-20250313160318365"></p><h2 id="windows11安装nacos" tabindex="-1">windows11安装nacos <a class="header-anchor" href="#windows11安装nacos" aria-label="Permalink to &quot;windows11安装nacos&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#1先以非挂载模式临时启动容器：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos-temp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 8848:8848</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MODE=standalone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos/nacos-server</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#2从临时容器中复制配置文件到本地目录：</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 创建本地目录（如果尚未创建）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> D:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">acos</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">onf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 从容器中复制配置文件到本地</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cp</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos-temp:/home/nacos/conf/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> D:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">acos</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">onf</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#3删除临时容器：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> stop</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos-temp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;&amp;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos-temp</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#4.重新运行容器（挂载配置目录）：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 8848:8848</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MODE=standalone</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> D:/wanglili/docker/nacos/conf:/home/nacos/conf</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> D:/wanglili/docker/nacos/data:/home/nacos/data</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos/nacos-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">访问</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://localhost:8848/nacos，确认控制台可正常登录。</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">检查容器日志</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> logs</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nacos</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,9),h=[p];function t(k,r,d,c,o,A){return i(),a("div",null,h)}const b=s(l,[["render",t]]);export{y as __pageData,b as default};
